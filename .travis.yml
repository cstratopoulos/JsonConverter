# Ossiaco JSON Converter Library
# 
# Copyright (C) 2018 Ossiaco
# 
# Licensed under the MIT license ("the license"); you may not use this file
# except in compliance with the license. The license can be found in the root
# directory of this project, or at
# 
# http://opensource.org/licenses/MIT
#
# This travis.yml borrows heavily from that written by Louis Dionne for boostorg/hana

language: cpp
os: linux
dist: trusty
sudo: false

branches:
  except:
  - /appveyor.*/

matrix:
  include:
    # Comment these out for now to allow easy initial troubleshooting
    # Clang 4.0
    - env: COMPILER=clang++-4.0 ENABLE_MEMCHECK=true
      addons: { apt: { packages: ["clang-4.0", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-4.0"] } }

    # Clang 5.0
    - env: COMPILER=clang++-5.0 ENABLE_MEMCHECK=true
      addons: { apt: { packages: ["clang-5.0", "valgrind"], sources: ["ubuntu-toolchain-r-test", "llvm-toolchain-trusty-5.0"] } }
    
    # GCC 7
    - env: COMPILER=g++-7 ENABLE_MEMCHECK=true
      addons: { apt: { packages: ["g++-7", "valgrind"], sources: ["ubuntu-toolchain-r-test"] } }

install:
  - DEPS_DIR="${HOME}/deps"; mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  - |
    for lib in "HowardHinnant|date|v2.4.1" "Tencent|rapidjson|v1.1.0" "EricNiebler|range-v3|0.3.5"; do
      ORG_NAME="$(echo $lib | cut -d'|' -f1)"
      GIT_NAME="$(echo $lib | cut -d'|' -f2)"
      TAG_NAME="$(echo $lib | cut -d'|' -f3)"
      git clone https://github.com/"${ORG_NAME}"/"${GIT_NAME}".git && cd "${GIT_NAME}"
      git checkout tags/"${TAG_NAME}"
      cd include/
      for dir in `ls -d */`; do
        cp -r $dir "${DEPS_DIR}/"
      done
    done
    cd "${DEPS_DIR}"
    ls
    export PATH=${DEPS_DIR}:${PATH}

  - |
    travis_retry wget -q https://dl.bintray.com/boostorg/release/1.67.0/source/boost_1_67_0.tar.gz
    tar xf boost_1_67_0.tar.gz

  - |
   travis_retry wget -q https://cmake.org/files/v3.10/cmake-3.10.0-Linux-x86_64.tar.gz
   tar xf cmake-3.10.0-Linux-x86_64.tar.gz
   alias cmake='./cmake-3.10.0-Linux-x86_64/bin/cmake'
   cmake --version

script:
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build && cd build
  - cmake --warn-uninitialized -DCMAKE_CXX_COMPILER="${COMPILER}" -DBOOST_ROOT="${HOME}/deps/boost_1_67_0" -DOSSIACO_CONVERTER_TESTS=ON ../  
  - make -j4
  - ctest --output-on-failure
  - |
    if [[ "${ENABLE_MEMCHECK}" == "true" ]]; then
      valgrind ctest
    fi

notifications:
  email: false